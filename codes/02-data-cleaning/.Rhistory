duplicated(incident_SS$Incident_ID)
incident_SS[duplicated(incident_SS$Incident_ID),]
duplicated(incident_SS)
# There appears to be a duplicate Incident_ID in the school shooting DB
incident_SS[duplicated(incident_SS$Incident_ID),]$Incident_ID
# There appears to be a duplicate Incident_ID in the school shooting DB
#incident_SS[duplicated(incident_SS$Incident_ID),]$Incident_ID
# The id in question is 20210902CASAL
incident_SS[incident_SS$Incident_ID == "20210902CASAL"]
# There appears to be a duplicate Incident_ID in the school shooting DB
#incident_SS[duplicated(incident_SS$Incident_ID),]$Incident_ID
# The id in question is 20210902CASAL
incident_SS[incident_SS$Incident_ID == "20210902CASAL",]
# There appears to be a duplicate Incident_ID in the school shooting DB
#incident_SS[duplicated(incident_SS$Incident_ID),]$Incident_ID
# The id in question is 20210902CASAL
View(incident_SS[incident_SS$Incident_ID == "20210902CASAL",])
# Remove duplicate row
incident_SS[286]
# Remove duplicate row
incident_SS[286,]
# Remove duplicate row
incident_SS[!286,]
# Remove duplicate row
incident_SS[-286,]
# Remove duplicate row
incident_SS <- incident_SS[-286,]
# Because this project is only concerned with school shootings, we need to
# filter out the cases in the Mass Shooters DB that occurred in locations other
# than schools
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1)
sprintf("%04d%02d%02d", 2022, 2,3)
sprintf("%04d%02d%02d%02s", 2022, 2,3,"UT")
sprintf("%04d%02d%02d%02s", 2022, 2,3,"UTA")
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_ID_partial = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State))
shooters_clean_MS$Incident_ID_partial
shooters_clean_MS$Incident_ID_partial[1]
grepl("19660801TX", incident_SS$Incident_ID, fixed = TRUE)
incident_SS[grepl("19660801TX", incident_SS$Incident_ID, fixed = TRUE),]
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_ID_partial = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State),
Incident_ID = incident_SS[grepl(Incident_ID_partial, incident_SS$Incident_ID, fixed = TRUE),])
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_ID_partial = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State),
Incident_ID = incident_SS[grepl(Incident_ID_partial, incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID)
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_ID_partial = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State),
Incident_ID = ifelse(
incident_SS[grepl(Incident_ID_partial, incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID != 0,
incident_SS[grepl(Incident_ID_partial, incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID,
0)
)
shooters_clean_MS$Incident_ID_partial
incident_SS[grepl(20180214FL, incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID
incident_SS[grepl("20180214FL", incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID
incident_SS[grepl("19660801TX", incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_ID_partial = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State),
Incident_ID = ifelse(
incident_SS[grepl(Incident_ID_partial, incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID != character(0),
incident_SS[grepl(Incident_ID_partial, incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID,
0)
)
incident_SS[grepl("19660801TX", incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID
incident_SS[grepl("19660801TX", incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID != 0
incident_SS[grepl("19660801TX", incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_ID_partial = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State),
Incident_ID =
incident_SS[grepl(Incident_ID_partial, incident_SS$Incident_ID, fixed = TRUE),]$Incident_ID
)
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_ID_partial = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State)
)
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_date = sprintf("%04d-%02d-%02d",
Year,
Month,
Day),
Incident_ID = incident_SS[incident_SS$Date == Incident_date,]
)
incident_SS[incident_SS$Date == incident_SSIncident_date,]
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_date = sprintf("%04d-%02d-%02d",
Year,
Month,
Day)
)
incident_SS[incident_SS$Date == incident_SSIncident_date,]
incident_SS[incident_SS$Date == shooters_clean_MS,]
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_date = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State))
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_ID_partial = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State))
# Save partial incident IDs
partial_ids <- shooters_clean_MS$Incident_ID_partial
# Create incident key in MSDB
# Save incident ids from SSDB
incident_ids <- incident_SS$Incident_ID
# Save partial incident IDs
partial_ids <- shooters_clean_MS$Incident_ID_partial
for (par_id in partial_ids) {
print(par_id)
}
print(i)
for (i in 1:length(partial_ids)) {
print(i)
}
for (i in 1:length(partial_ids)) {
print(partial_ids[i])
}
for (i in 1:length(partial_ids)) {
partial_ids[i] <- incident_ids[grepl(partial_ids[i], incident_ids, fixed = TRUE)]
}
for (i in 1:length(partial_ids)) {
completed_id <- incident_ids[grepl(partial_ids[i], incident_ids, fixed = TRUE)]
if (completed_id > 0) {
partial_ids[i] <- completed_id
} else{
partial_ids[i] <- 0
}
}
for (i in 1:length(partial_ids)) {
completed_id <- incident_ids[grepl(partial_ids[i], incident_ids, fixed = TRUE)]
if (identical(completed_id, character(0))) {
partial_ids[i] <- completed_id
} else{
partial_ids[i] <- 0
}
}
for (i in 1:length(partial_ids)) {
completed_id <- incident_ids[grepl(partial_ids[i], incident_ids, fixed = TRUE)]
if (identical(completed_id, character(0))) {
partial_ids[i] <- 0
}
else {
partial_ids[i] <- completed_id
}
}
partial_ids
for (i in 1:length(partial_ids)) {
completed_id <- incident_ids[grepl(partial_ids[i], incident_ids, fixed = TRUE)]
if (identical(completed_id, character(0))) {
partial_ids[i] <- "NA"
}
else {
partial_ids[i] <- completed_id
}
}
# Create incident key in MSDB
# Save incident ids from SSDB
incident_ids <- incident_SS$Incident_ID
# Save partial incident IDs
partial_ids <- shooters_clean_MS$Incident_ID_partial
for (i in 1:length(partial_ids)) {
completed_id <- incident_ids[grepl(partial_ids[i], incident_ids, fixed = TRUE)]
if (identical(completed_id, character(0))) {
partial_ids[i] <- "NA"
}
else {
partial_ids[i] <- completed_id
}
}
# Save completed IDs to shooters_clean_MS, reorder columns, drop partial ids
shooters_clean_MS <- shooters_clean_MS %>%
mutate(Incident_ID = partial_ids)
# Save completed IDs to shooters_clean_MS, reorder columns, drop partial ids
shooters_clean_MS <- shooters_clean_MS %>%
mutate(Incident_ID = partial_ids) %>%
select(c(-Incident_ID_partial))
# Save completed IDs to shooters_clean_MS, reorder columns, drop partial ids
shooters_clean_MS <- shooters_clean_MS %>%
mutate(Incident_ID = partial_ids) %>%
select(c(-Incident_ID_partial)) %>%
relocate(Incident_ID)
# Import libraries
library(tidyverse)
# Read in data
data_path <- "../../data/01-modified-data/"
shooters_MS <- read.csv(paste0(data_path, "MSDB/mass_shooter_database.csv"),
skip = 1)
incident_SS <- read.csv(paste0(data_path, "SSDB/incident.csv"))
shooters_SS <- read.csv(paste0(data_path, "SSDB/shooter.csv"))
# Remove duplicate row
incident_SS <- incident_SS[-286,]
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_ID_partial = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State))
# Create incident key in MSDB
# Save incident ids from SSDB
incident_ids <- incident_SS$Incident_ID
# Save partial incident IDs
partial_ids <- shooters_clean_MS$Incident_ID_partial
# Complete partial ids if they match an incident id in SSDB
for (i in 1:length(partial_ids)) {
completed_id <- incident_ids[grepl(partial_ids[i], incident_ids, fixed = TRUE)]
if (identical(completed_id, character(0))) {
partial_ids[i] <- "NA"
}
else {
partial_ids[i] <- completed_id
}
}
# Save completed IDs to shooters_clean_MS, reorder columns, drop partial ids
shooters_clean_MS <- shooters_clean_MS %>%
mutate(Incident_ID = partial_ids) %>%
select(c(-Incident_ID_partial)) %>%
relocate(Incident_ID)
# Import libraries
library(tidyverse)
# Read in data
data_path <- "../../data/01-modified-data/"
shooters_MS <- read.csv(paste0(data_path, "MSDB/mass_shooter_database.csv"),
skip = 1)
incident_SS <- read.csv(paste0(data_path, "SSDB/incident.csv"))
shooters_SS <- read.csv(paste0(data_path, "SSDB/shooter.csv"))
# Remove duplicate row
incident_SS <- incident_SS[-286,]
# Import libraries
library(tidyverse)
# Read in data
data_path <- "../../data/01-modified-data/"
shooters_MS <- read.csv(paste0(data_path, "MSDB/mass_shooter_database.csv"),
skip = 1)
incident_SS <- read.csv(paste0(data_path, "SSDB/incident.csv"))
shooters_SS <- read.csv(paste0(data_path, "SSDB/shooter.csv"))
View(incident_SS[incident_SS$Incident_ID == "20210902CASAL",])
install.packages("xtable")
#######
library(xtable)
print(xtable(incident_SS[incident_SS$Incident_ID == "20210902CASAL",]), type = "html")
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_ID_partial = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State))
# Create incident key in MSDB
# Save incident ids from SSDB
incident_ids <- incident_SS$Incident_ID
# Save partial incident IDs
partial_ids <- shooters_clean_MS$Incident_ID_partial
# Complete partial ids if they match an incident id in SSDB
for (i in 1:length(partial_ids)) {
completed_id <- incident_ids[grepl(partial_ids[i], incident_ids, fixed = TRUE)]
if (identical(completed_id, character(0))) {
partial_ids[i] <- "NA"
}
else {
partial_ids[i] <- completed_id
}
}
# Save completed IDs to shooters_clean_MS, reorder columns, drop partial ids
shooters_clean_MS <- shooters_clean_MS %>%
mutate(Incident_ID = partial_ids) %>%
select(c(-Incident_ID_partial)) %>%
relocate(Incident_ID)
write.csv(shooters_clean_MS,
"../../data/02-clean-data/MSDB/school_shooters.csv",
row.names = FALSE)
# For context/information on data_cleaning.html
nrow(shooters_MS)
nrow(shooters_clean_MS)
nrow(shooters_clean_MS[shooters_clean_MS$Incident_ID !="NA"])
nrow(shooters_clean_MS[shooters_clean_MS$Incident_ID !="NA",])
View(shooters_clean_MS[shooters_clean_MS$Incident_ID !="NA",])
View(shooters_clean_MS[shooters_clean_MS$Incident_ID =="NA",])
SS_missing <- shooters_clean_MS[shooters_clean_MS$Incident_ID =="NA",]
View(SS_missing)
write.csv(SS_missing,
"../../data/02-clean-data/missing_shooters.csv",
row.names = FALSE)
# In the mass shooter DB, we will filter the data down to only school shootings
# and we will generate an id that can connect the incidents/cases to the school
# shooting DB
shooters_clean_MS <- shooters_MS %>%
# Filter on locations of 0 (K-12 schools) and 1 (colleges/universities)
filter(Location == 0 | Location == 1 |
Other.Location == 0 | Other.Location == 1) %>%
mutate(Incident_ID_partial = sprintf("%04d%02d%02d%s",
Year,
Month,
Day,
State))
# Create incident key in MSDB
# Save incident ids from SSDB
incident_ids <- incident_SS$Incident_ID
# Save partial incident IDs
partial_ids <- shooters_clean_MS$Incident_ID_partial
# Complete partial ids if they match an incident id in SSDB
for (i in 1:length(partial_ids)) {
completed_id <- incident_ids[grepl(partial_ids[i], incident_ids, fixed = TRUE)]
if (identical(completed_id, character(0))) {
partial_ids[i] <- "NA"
}
else {
partial_ids[i] <- completed_id
}
}
# Save completed IDs to shooters_clean_MS, reorder columns, reformat dates for
# easier comparison with SSDB
shooters_clean_MS <- shooters_clean_MS %>%
mutate(Incident_ID = partial_ids,
Full.Date.SSDB = sprintf("%04d-%02d-%02d"), Year, Month, Day) %>%
select(c(-Incident_ID_partial)) %>%
relocate(c(Incident_ID, Full.Date.SSDB))
sprintf("%04d-%02d-%02d"), 2022, 4, 3)
# Save completed IDs to shooters_clean_MS, reorder columns, reformat dates for
# easier comparison with SSDB
shooters_clean_MS <- shooters_clean_MS %>%
mutate(Incident_ID = partial_ids,
Full.Date.SSDB = sprintf("%04d-%02d-%02d", Year, Month, Day)) %>%
select(c(-Incident_ID_partial)) %>%
relocate(c(Incident_ID, Full.Date.SSDB))
write.csv(shooters_clean_MS,
"../../data/02-clean-data/MSDB/school_shooters.csv",
row.names = FALSE)
# Now let's take a closer look at the shooters that aren't present in SSDB and
# ascertain why
SS_missing <- shooters_clean_MS[shooters_clean_MS$Incident_ID =="NA",]
# Now let's take a closer look at the shooters that aren't present in SSDB and
# ascertain why
MS_missing <- shooters_clean_MS[shooters_clean_MS$Incident_ID =="NA",]
write.csv(MS_missing,
"../../data/02-clean-data/missing_shooters.csv",
row.names = FALSE)
incident_SS$Date
incident_SS$Date %in% MS_missing$Full.Date.SSDB
# Return all SSDB incidents that occurred on the the same day as a missing
# MSDB incident
SS_missing <- incident_SS[incident_SS$Date %in% MS_missing$Full.Date.SSDB,]
incident_SS$Date %in% MS_missing$Full.Date.SSDB
View(MS_missing)
incident_SS[incident_SS$Date == "2015-10-01"]
incident_SS[incident_SS$Date == "2015-10-01",]
View(incident_SS)
# Import libraries
library(tidyverse)
# Read in data
data_path <- "../../data/01-modified-data/"
shooters_MS <- read.csv(paste0(data_path, "MSDB/mass_shooter_database.csv"),
skip = 1)
incident_SS <- read.csv(paste0(data_path, "SSDB/incident.csv"))
shooters_SS <- read.csv(paste0(data_path, "SSDB/shooter.csv"))
victims_SS <- read.csv(paste0(data_path, "SSDB/victim.csv"))
victims_SS <- read.csv(paste0(data_path, "SSDB/victim.csv")) %>%
# Match column name for unique key identifier column with that of the
# incident table
rename(Incident_ID = incidentid)
victims_SS <- read.csv(paste0(data_path, "SSDB/victim.csv")) %>%
# Match column name for unique key identifier column with that of the
# incident table
rename(Incident_ID = incidentid)
write.csv(shooters_SS, "../../data/02-clean-data/SSDB/shooter.csv",
row.names = FALSE)
write.csv(victims_SS, "../../data/02-clean-data/SSDB/victim.csv",
row.names = FALSE)
# Import libraries
library(tidyverse)
# Read in data
data_path <- "../../data/01-modified-data/"
shooters_MS <- read.csv(paste0(data_path, "MSDB/mass_shooter_database.csv"),
skip = 1)
incident_SS <- read.csv(paste0(data_path, "SSDB/incident.csv"))
shooters_SS <- read.csv(paste0(data_path, "SSDB/shooter.csv")) %>%
# Match column name for unique key identifier column with that of the
# incident table
rename(Incident_ID = incidentid)
victims_SS <- read.csv(paste0(data_path, "SSDB/victim.csv")) %>%
# Match column name for unique key identifier column with that of the
# incident table
rename(Incident_ID = incidentid)
write.csv(shooters_SS, "../../data/02-clean-data/SSDB/shooter.csv",
row.names = FALSE)
write.csv(victims_SS, "../../data/02-clean-data/SSDB/victim.csv",
row.names = FALSE)
# Import libraries
library(tidyverse)
# Read in data
data_path <- "../../data/01-modified-data/"
shooters_MS <- read.csv(paste0(data_path, "MSDB/mass_shooter_database.csv"),
skip = 1)
incident_SS <- read.csv(paste0(data_path, "SSDB/incident.csv"))
shooters_SS <- read.csv(paste0(data_path, "SSDB/shooter.csv")) %>%
# Match column name for unique key identifier column with that of the
# incident table
rename(Incident_ID = incidentid)
victims_SS <- read.csv(paste0(data_path, "SSDB/victim.csv")) %>%
# Match column name for unique key identifier column with that of the
# incident table
rename(Incident_ID = incidentid)
