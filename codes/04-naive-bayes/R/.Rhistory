mutate(fatal = ifelse(injury == "Fatal", 1, 0))
# Join incident data on
# left_join(incidents, by=c("Incident_ID")) %>%
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor
mutate(fatal = as.factor(fatal, levels = c(1,0)))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor
mutate(fatal = as.factor(fatal))
# Join incident data on
# left_join(incidents, by=c("Incident_ID")) %>%
fatalities$fatal
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor
mutate(fatal = factor(fatal, levels = c(1,0)))
# Join incident data on
# left_join(incidents, by=c("Incident_ID")) %>%
fatalities$fatal
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
order(fatal)
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
group_by(-c(fatal))
# Join incident data on
# left_join(incidents, by=c("Incident_ID")) %>%
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrage(fatal)
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal)
# Join incident data on
# left_join(incidents, by=c("Incident_ID")) %>%
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID)
# Join incident data on
# left_join(incidents, by=c("Incident_ID")) %>%
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(c(Incident_ID, fatal))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal)
# Join incident data on
# left_join(incidents, by=c("Incident_ID")) %>%
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal) %>%
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
right_join(incidents, by=Incident_ID)
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal) %>%
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
full_join(incidents, by=Incident_ID)
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal) %>%
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
right_join(incidents)
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal)
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
# right_join(incidents)
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal) %>%
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
right_join(incidents)
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal)
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
# right_join(incidents)
test_df <- incidents %>%
left_join(victims, by=Incident_ID)
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal) %>%
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
right_join(incidents, by=c("Incident_ID"))
test_df <- incidents %>%
left_join(victims, by=c("Incident_ID"))
length(unique(incidents$Incident_ID))
length(unique(victims$Incident_ID))
length(unique(test_df$Incident_ID))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal) %>%
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
outer_join(incidents, by=c("Incident_ID"))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal) %>%
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
full_join(incidents, by=c("Incident_ID"))
length(unique(fatalities$Incident_ID))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal) %>%
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
inner_join(incidents, by=c("Incident_ID"))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal) %>%
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
right_join(incidents, by=c("Incident_ID"))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal) %>%
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
left_join(incidents, by=c("Incident_ID"))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal) %>%
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
right_join(incidents, by=c("Incident_ID"))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal)
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
# right_join(incidents, by=c("Incident_ID"))
length(unique(fatalities$Incident_ID))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal)
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
# right_join(incidents, by=c("Incident_ID"))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
distinct(Incident_ID, fatal)
# We now have a dataframe of each incident resulting in an injury that tells
# us whether that incident was fatal.
# Right join on incidents df to include all incidents
# right_join(incidents, by=c("Incident_ID"))
View(fatalities)
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop duplicate incidents
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal)
# Drop duplicate incidents
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal)
# Drop duplicate incidents
fatalities <- fatalities[!duplicated(fatalities),]
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal)
# Drop duplicate incidents
fatalities <- fatalities[!duplicated(fatalities),]
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal) %>%
# Drop duplicate ids
filter(!duplicated(Incident_ID))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal) %>%
# Drop duplicate ids
filter(!duplicated(Incident_ID)) %>%
# Join with incidents dataframe
right_join(incidents, by=c("Incident_ID"))
remove(test_df)
as.numeric(fatalities$Shots_Fired)
length(unique(shooters$Incident_ID))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal) %>%
# Drop duplicate ids
filter(!duplicated(Incident_ID)) %>%
# Join with incidents dataframe
right_join(incidents, by=c("Incident_ID")) %>%
# Join with shooters dataframe
right_join(shooters, by=c("Incident_ID"))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal) %>%
# Drop duplicate ids
filter(!duplicated(Incident_ID)) %>%
# Join with incidents dataframe
right_join(incidents, by=c("Incident_ID")) %>%
# Join with shooters dataframe
left_join(shooters, by=c("Incident_ID"))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal) %>%
# Drop duplicate ids
filter(!duplicated(Incident_ID)) %>%
# Join with incidents dataframe
right_join(incidents, by=c("Incident_ID")) %>%
# Join with shooters dataframe
inner_join(shooters, by=c("Incident_ID"))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal) %>%
# Drop duplicate ids
filter(!duplicated(Incident_ID)) %>%
# Join with incidents dataframe
right_join(incidents, by=c("Incident_ID"))
unique_shooter_incs <- length(unique(shooters$Incident_ID))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal) %>%
# Drop duplicate ids
filter(!duplicated(Incident_ID)) %>%
# Join with incidents dataframe
right_join(incidents, by=c("Incident_ID"))
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal) %>%
# Drop duplicate ids
filter(!duplicated(Incident_ID)) %>%
# Join with incidents dataframe
right_join(incidents, by=c("Incident_ID"))
getwd()
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal) %>%
# Drop duplicate ids
filter(!duplicated(Incident_ID)) %>%
# Join with incidents dataframe
right_join(incidents, by=c("Incident_ID"))
# Export new dataframe
write.csv(fatalities, "../../../data/02-clean-data/SSDB/fatalities.csv")
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal) %>%
# Drop duplicate ids
filter(!duplicated(Incident_ID)) %>%
# Join with incidents dataframe
right_join(incidents, by=c("Incident_ID"))
# Export new dataframe
write.csv(fatalities,
"../../../data/02-clean-data/SSDB/04-naive-bayes/fatalities.csv")
library(tidyverse)
library(e1071)
library(caTools)
library(caret)
unique(fatalities$Location_Type)
unique(fatalities$Time_Period)
unique(fatalities$Targets)
unique(fatalities$Bullied)
fatalities <- victims %>%
# Create new fatal column (1 if incident was fatal, else 0)
mutate(fatal = ifelse(injury == "Fatal", 1, 0)) %>%
# Convert new fatal column to factor (prioritizing 1 over 0)
mutate(fatal = factor(fatal, levels = c(1,0))) %>%
# Order dataframe by fatal column
arrange(fatal) %>%
# Drop all other rows
select(Incident_ID, fatal) %>%
# Drop duplicate ids
filter(!duplicated(Incident_ID)) %>%
# Join with incidents dataframe
right_join(incidents, by=c("Incident_ID"))
# Export new dataframe
write.csv(fatalities,
"../../../data/02-clean-data/SSDB/04-naive-bayes/fatalities.csv")
# Clean data for Naive Bayes
fatalities_NB <- fatalities %>%
# Drop unnecessary columns
select(fatal, Quarter, State, School_Level, Location_Type, During_School,
Time_Period, Bullied, Domestic_Violence, Gang_Related, Preplanned)
# All columns should be numeric
